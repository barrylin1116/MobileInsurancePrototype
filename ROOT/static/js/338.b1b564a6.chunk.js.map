{"version":3,"file":"static/js/338.b1b564a6.chunk.js","mappings":"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","sources":["app/features/Other/components/SignTopButton.tsx","app/features/Insurance/pages/Modals/SignModal.tsx","app/features/Insurance/pages/Modals/SignatureModal.tsx","app/features/Other/Content/Sign/Inner/types.ts","app/features/Other/Content/Sign/Inner/InsureDoc.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { round } from 'lodash';\n\nconst SignTopButton: React.FC<any> = ({ isModal = false, containerRef, ...props }) => {\n  const [showTop, setShowTop] = useState(false);\n  useEffect(() => {\n    if (!isModal) {\n      const handleScroll = (e: any) => {\n        setShowTop((document.documentElement.scrollHeight - window.innerHeight) <= (window.scrollY + 50));\n      };\n      window.addEventListener('scroll', handleScroll);\n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    } else {\n      const handleModalScroll = (e: any) => {\n        const { scrollTop, scrollHeight, clientHeight } = containerRef.current;\n        const pdfCards = document.getElementsByClassName('pdfCard');\n        for (let index = 0; index < pdfCards.length; index++) {\n          // const next = pdfCards.item(index + 1);\n          const current = pdfCards.item(index);\n          // const nextHeight = next ? next.getBoundingClientRect().y : scrollHeight;\n          const currentHeight = current ? current.getBoundingClientRect().y : 0;\n          const currentClientHeight = current ? current.clientHeight : 0;\n          // console.log(`(currentHeight - 128) + currentClientHeight: ${(currentHeight - 128) + currentClientHeight}`);\n          // debugger;\n          if (round(currentHeight) <= 148 && round(currentHeight) >= (148 - currentClientHeight)) {\n            props.setActivePage((index + 1));\n            const ele = document.getElementById('pageItem-' + (index + 1));\n            if (!ele?.classList.contains('editItem')) {\n              ele?.classList.add('active');\n            }\n          }\n        }\n        if (scrollTop + clientHeight >= (scrollHeight - scrollHeight * 0.2)) {\n          setShowTop(true);\n        } else {\n          setShowTop(false);\n        }\n      };\n\n      containerRef.current.addEventListener('scroll', handleModalScroll);\n      return () => {\n        containerRef.current.removeEventListener('scroll', handleModalScroll);\n      };\n    }\n  }, []);\n\n  return showTop\n    ? (\n      <div\n        className=\"topBtn\" onClick={() => {\n          isModal\n            ? containerRef.current.scrollTo({\n              top: 0,\n              behavior: 'smooth'\n            })\n            : document.documentElement.scrollTop = 0;\n        }}\n      >\n        Top\n      </div>\n      )\n    : <></>;\n};\n\nexport default SignTopButton;\n","import React, { useRef, useState } from 'react';\nimport SignTopButton from '../../../Other/components/SignTopButton';\n\nconst SignModal: React.FC<{\n  isOpen: boolean,\n  headerTitle: string,\n  headerButton?: any,\n  buttonPosition?: string,\n  children: any,\n  footerContent?: any,\n  customHeaderButtonOnclick?: () => void\n  isModalMsg?: boolean\n  bodyClassName?: string,\n  numPages: number\n}> = ({ bodyClassName, isOpen, headerTitle, headerButton, buttonPosition, children, footerContent, customHeaderButtonOnclick, isModalMsg, ...props }) => {\n  const divRefs = useRef<(HTMLDivElement)>(null);\n  const [activePage, setActivePage] = useState(1);\n\n  const pageItem = [\n    {\n      pageNum: 1,\n      edit: false\n    },\n    {\n      pageNum: 2,\n      edit: false\n    },\n    {\n      pageNum: 3,\n      edit: true\n    }\n  ];\n\n  const getMaxZIndex = (): number => {\n    const elements = document.getElementsByTagName('*');\n    let maxZ = 0;\n    for (let i = 0; i < elements.length; i++) {\n      const zIndex = window.getComputedStyle(elements[i]).zIndex;\n      if (zIndex !== 'auto') {\n        const zIndexNumber = parseInt(zIndex, 10);\n        if (!isNaN(zIndexNumber)) {\n          maxZ = Math.max(maxZ, zIndexNumber);\n        }\n      }\n    }\n    return maxZ;\n  };\n\n  return (\n    <>\n      {\n        isOpen && (\n          <div\n            id=\"SignModal\" className={`modal-overlay ${isOpen ? 'visible' : ''} ${isModalMsg ? 'modal-message' : ''}`} style={{\n              zIndex: `${isOpen ? getMaxZIndex() + 10 : 0}`\n            }}\n          >\n            <div className=\"modal-container\">\n              <div className=\"modal-header\">\n                {\n                    headerButton && (\n                      <div className={`header-button ${buttonPosition ?? 'right'}`}>\n                        {headerButton}\n                      </div>\n                    )\n                }\n                <div className=\"header-title\">{headerTitle}</div>\n\n              </div>\n              <div className=\"row header-page justify-center\">\n                <ul className=\"d-flex justify-center pdfPage\">\n                  <li className=\"pageLabel\">頁面快速索引：</li>\n                  {\n                    pageItem.map((p, index) => {\n                      return (\n                        <li\n                          id={'pageItem-' + (p.pageNum)}\n                          onClick={() => {\n                            const element = document.getElementById('pdfCard-' + (p.pageNum));\n                            element?.scrollIntoView({ behavior: 'smooth' });\n                          }} className={'pageItem' + (index === 0 ? ' active' : '') + (p.edit ? ' editItem' : '')} key={index}\n                        > <span className={'pageNum ' + (activePage === (p.pageNum) ? 'active' : '')}>{p.pageNum}</span>\n                        </li>\n                      );\n                    })\n                  }\n                </ul>\n              </div>\n              <div ref={divRefs} className={`modal-body mb-5 ${bodyClassName ?? ''}`}>\n                {children}\n              </div>\n              {footerContent && (\n                <div className=\"modal-footer justify-content-center\">\n                  {footerContent}\n                </div>\n              )}\n            </div>\n            {divRefs && (<SignTopButton isModal setActivePage={setActivePage} containerRef={divRefs} />)}\n          </div>\n\n        )\n      }\n    </>\n  );\n};\n\nexport default SignModal;\n","import React, { useRef } from 'react';\nimport TopButton from '../../../Other/components/TopButton';\n\nconst SignatureModal: React.FC<{\n  isOpen: boolean,\n  headerButton?: any,\n  buttonPosition?: string,\n  children: any,\n  footerContent?: any,\n  customHeaderButtonOnclick?: () => void\n  isModalMsg?: boolean\n  bodyClassName?: string\n}> = ({ bodyClassName, isOpen, headerButton, buttonPosition, children, footerContent, customHeaderButtonOnclick, isModalMsg, ...props }) => {\n  const divRefs = useRef<(HTMLDivElement)>(null);\n\n  const getMaxZIndex = (): number => {\n    const elements = document.getElementsByTagName('*');\n    let maxZ = 0;\n\n    for (let i = 0; i < elements.length; i++) {\n      const zIndex = window.getComputedStyle(elements[i]).zIndex;\n      if (zIndex !== 'auto') {\n        const zIndexNumber = parseInt(zIndex, 10);\n        if (!isNaN(zIndexNumber)) {\n          maxZ = Math.max(maxZ, zIndexNumber);\n        }\n      }\n    }\n    return maxZ;\n  };\n\n  return (\n    <>\n      {\n        isOpen && (\n          <div\n            id=\"SignatureModal\" className={`modal-overlay start-0 top-0 position-fixed justify-content-center align-items-center d-flex w-100 h-100 ${isOpen ? 'visible' : ''} ${isModalMsg ? 'modal-message' : ''}`} style={{\n              zIndex: `${isOpen ? getMaxZIndex() + 10 : 0}`\n            }}\n          >\n            <div className=\"modal-container container bg-white p-0 position-relative d-flex flex-column\">\n              {\n                (headerButton) && (\n                  <div className=\"m-0 row justify-content-center align-items-center\">\n                    <div\n                      className=\"col justify-content-center align-items-center modal-header position-relative d-flex p-3\"\n                    >\n                      <div className=\"header-title\">請簽名於下方框内：王小明</div>\n                      {\n                          headerButton && (\n                            <div className={`position-absolute header-button ${buttonPosition ?? 'right'}`}>\n                              {headerButton}\n                            </div>\n                          )\n                      }\n                    </div>\n                  </div>\n                )\n              }\n\n              <div ref={divRefs} className=\"row justify-content-center align-items-center modal-body mh-100 m-0\">\n                <div className=\"container mh-100\">\n                  {children}\n                </div>\n              </div>\n              {footerContent && (\n                <div className=\"row justify-content-center align-items-center m-0\">\n                  <div className=\"container m-1 p-1\">\n                    {footerContent}\n                  </div>\n                </div>\n              )}\n            </div>\n            {divRefs && (<TopButton isModal containerRef={divRefs} />)}\n          </div>\n\n        )\n      }\n    </>\n  );\n};\n\nexport default SignatureModal;\n","export class Point {\n    public x: number;\n    public y: number;\n    constructor (x: number, y: number) {\n      this.x = x;\n      this.y = y;\n    }\n}\n","import React, { useEffect, useRef, useState } from 'react';\n// @ts-ignore\nimport * as pdfjsLib from 'pdfjs-dist/webpack';\nimport SignModal from 'app/features/Insurance/pages/Modals/SignModal';\nimport { Card } from 'antd';\nimport Signature from 'react-signature-canvas';\nimport SignatureModal from 'app/features/Insurance/pages/Modals/SignatureModal';\nimport { Point } from './types';\nimport _ from 'lodash';\n\nconst InsureDoc: React.FC<any> = (props) => {\n  const [pdf, setPdf] = useState<any>(null);\n  const initSignList = [\n    {\n      name: 'insure',\n      backRect: [172, 340, 100, 30],\n      signImg: null,\n      clickRect: [new Point(172, 340), new Point(172, 370), new Point(272, 340), new Point(272, 370)]\n    },\n    {\n      name: 'applicant',\n      backRect: [308, 340, 100, 30],\n      signImg: null,\n      clickRect: [new Point(308, 340), new Point(308, 370), new Point(408, 340), new Point(408, 370)]\n    },\n    {\n      name: 'agentInsure',\n      backRect: [450, 320, 100, 30],\n      signImg: null,\n      clickRect: [new Point(450, 320), new Point(450, 350), new Point(550, 320), new Point(550, 350)]\n    },\n    {\n      name: 'agentApplicant',\n      backRect: [450, 355, 100, 30],\n      signImg: null,\n      clickRect: [new Point(450, 355), new Point(450, 385), new Point(550, 355), new Point(550, 385)]\n    },\n    {\n      name: 'saleMan',\n      backRect: [172, 485, 100, 30],\n      signImg: null,\n      clickRect: [new Point(172, 485), new Point(172, 515), new Point(272, 485), new Point(272, 515)]\n    }\n  ];\n  const [signList, setSignList] = useState<any[]>(initSignList);\n  const [currentSign, setCurrentSign] = useState<any>();\n  const [bindRelationSet, setBindRelationSet] = useState<Set<string>>(new Set<string>([]));\n\n  const loadFile = (url: string) => {\n    const loadingTask = pdfjsLib.getDocument(url);\n    loadingTask.promise.then((pdf: any) => {\n      setPdf(pdf);\n    });\n  };\n\n  useEffect(() => {\n    loadFile(require('assets/pdf/insure.pdf'));\n  }, []);\n\n  useEffect(() => {\n    if (pdf != null) {\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n        pdf.getPage(pageNum).then((page: any) => {\n          const canvas: any = document.getElementById('pdfCanvas-' + pageNum);\n          const ctx = canvas.getContext('2d');\n          const ratio = 2;\n          const viewport = page.getViewport({ scale: 1.0 });\n          canvas.width = viewport.width * ratio;\n          canvas.height = viewport.height * ratio;\n          canvas.style.width = '100%';\n          canvas.style.height = '100%';\n          ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\n          // 将 PDF 页面渲染到 canvas 上下文中\n          const renderContext = {\n            canvasContext: ctx,\n            viewport: viewport\n          };\n          page.render(renderContext).promise.then(() => {\n            if (pageNum === 3) {\n              draw();\n            }\n          });\n        });\n      }\n    }\n  }, [pdf]);\n\n  const draw = () => {\n    const canvas: any = document.getElementById('pdfCanvas-3');\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#e0e0e0';\n    signList.forEach(sign => {\n      ctx.fillRect(sign.backRect[0], sign.backRect[1], sign.backRect[2], sign.backRect[3]);\n    });\n  };\n\n  const drawRelation = (relation: string) => {\n    const canvas: any = document.getElementById('pdfCanvas-3');\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'black';\n      ctx.clearRect(530, 385, 35, 15);\n      switch (relation) {\n        case 'agentInsure':\n          ctx.fillText('要保人', 530, 395);\n          break;\n        case 'agentApplicant':\n          ctx.fillText('被保人', 530, 395);\n          break;\n      }\n    }\n  };\n\n  const [signatureVisible, setSignatureVisible] = useState(false);\n  const $svg = useRef<any>(null);\n\n  const isPointInRect = (point: Point, clickRect: Point[]): boolean => {\n    const A = clickRect[1];// 左下顶点\n    const B = clickRect[0];// 左上顶点\n    const C = clickRect[2];// 右上顶点\n    const D = clickRect[3];// 右下顶点\n    const a = (B.x - A.x) * (point.y - A.y) - (B.y - A.y) * (point.x - A.x);\n    const b = (C.x - B.x) * (point.y - B.y) - (C.y - B.y) * (point.x - B.x);\n    const c = (D.x - C.x) * (point.y - C.y) - (D.y - C.y) * (point.x - C.x);\n    const d = (A.x - D.x) * (point.y - D.y) - (A.y - D.y) * (point.x - D.x);\n    if ((a > 0 && b > 0 && c > 0 && d > 0) || (a < 0 && b < 0 && c < 0 && d < 0)) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (signatureVisible && currentSign.signImg) {\n      const signArea = document.getElementsByClassName('signature');\n      const canvas: any = signArea.item(0)?.getElementsByTagName('canvas');\n      const img = new Image();\n      img.src = currentSign.signImg;\n      const ctx = canvas[0].getContext('2d');\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvas[0].clientWidth, canvas[0].clientHeight);\n      };\n    }\n  }, [signatureVisible]);\n\n  useEffect(() => {\n    const checkEditSuccess = () => {\n      const editSuccess = signList.filter(s => s.signImg === null).length <= 0;\n      if (editSuccess) {\n        document.getElementById('pageItem-3')?.classList.add('active');\n      } else {\n        document.getElementById('pageItem-3')?.classList.remove('active');\n      }\n    };\n    checkEditSuccess();\n  }, [signList]);\n\n  useEffect(() => {\n    drawRelation(bindRelationSet.values().next().value);\n  }, [bindRelationSet]);\n\n  return (\n    <>\n      {props.visible &&\n          (\n            <SignModal\n              headerTitle=\"要保書\"\n              isOpen={props.visible}\n              buttonPosition=\"right\"\n              numPages={pdf ? pdf.numPages : 0}\n              headerButton={\n                <>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-primary me-1 me-lg-0 cus-outline-transparent InsuranceButton\"\n                    onClick={() => props.setVisible(false)}\n                  >\n                    完成\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn ml-1 btn-outline-light me-1 me-lg-0 cus-outline-transparent InsuranceButton\"\n                    onClick={() => props.setVisible(false)}\n                  >\n                    取消\n                  </button>\n                </>\n              }\n            >\n              <div className=\"justify-center d-flex\">\n                <div>\n                  {pdf !== null &&\n                      [...Array(pdf.numPages ?? 0)].map((_, index) => {\n                        return (\n                          <div key={index} className=\"pdfCard pb-3\">\n                            <Card id={'pdfCard-' + (index + 1)}>\n                              <canvas\n                                onClick={(e) => {\n                                  let x = e.clientX;\n                                  let y = e.clientY;\n                                  const rect = e.currentTarget.getBoundingClientRect();\n                                  x -= rect.left;\n                                  y -= rect.top;\n                                  x = x / e.currentTarget.clientWidth * e.currentTarget.width / 2;\n                                  y = y / e.currentTarget.clientHeight * e.currentTarget.height / 2;\n                                  // console.log(`x: ${x} y: ${y}`);\n                                  signList.forEach(sign => {\n                                    if (isPointInRect(new Point(x, y), sign.clickRect)) {\n                                      setSignatureVisible(true);\n                                      setCurrentSign(sign);\n                                    }\n                                  });\n                                }} id={'pdfCanvas-' + (index + 1)}\n                              />\n                            </Card>\n                          </div>\n                        );\n                      })}\n                </div>\n              </div>\n            </SignModal>\n          )}\n      {signatureVisible &&\n        <SignatureModal\n          isModalMsg\n          headerButton={\n            <>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary me-1 me-lg-0 cus-outline-transparent InsuranceButton\"\n                onClick={() => {\n                  setSignatureVisible(false);\n                  if ($svg.current) {\n                    const trimedCanvas: HTMLCanvasElement = $svg.current.getTrimmedCanvas();\n                    if (trimedCanvas) {\n                      const resizedCanvas: any = document.getElementById('pdfCanvas-3');\n                      const ctx = resizedCanvas?.getContext('2d');\n                      // 重置\n                      ctx.clearRect(currentSign.backRect[0],\n                        currentSign.backRect[1],\n                        100,\n                        30);\n                      // 添加背景\n                      ctx.fillStyle = '#e0e0e0';\n                      ctx.fillRect(currentSign.backRect[0],\n                        currentSign.backRect[1],\n                        100,\n                        30);\n                      // 添加签名\n                      ctx.drawImage(\n                        trimedCanvas,\n                        currentSign.backRect[0],\n                        currentSign.backRect[1],\n                        100,\n                        30\n                      );\n                      const myResizedData = trimedCanvas.toDataURL();\n                      let clone = _.cloneDeep(signList);\n                      clone = clone.map(m => {\n                        if (m.name === currentSign.name) {\n                          if (trimedCanvas.width > 1 && trimedCanvas.height > 1) {\n                            currentSign.signImg = myResizedData;\n                            if (m.name === 'agentInsure' || m.name === 'agentApplicant') {\n                              const clone = _.clone(bindRelationSet);\n                              clone.add(m.name);\n                              setBindRelationSet(clone);\n                            }\n                          } else {\n                            if (m.name === 'agentInsure' || m.name === 'agentApplicant') {\n                              const clone = _.clone(bindRelationSet);\n                              clone.delete(m.name);\n                              setBindRelationSet(clone);\n                            }\n                            currentSign.signImg = null;\n                          }\n                          return currentSign;\n                        }\n                        return m;\n                      });\n                      setSignList(clone);\n                    }\n                  }\n                }}\n              >\n                完成\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn ml-1 btn-outline-light me-1 me-lg-0 cus-outline-transparent InsuranceButton\"\n                onClick={() => {\n                  if ($svg.current) {\n                    const current: SignaturePad = $svg.current;\n                    current.clear();\n                  }\n                }}\n              >\n                撤銷\n              </button>\n            </>\n          } buttonPosition=\"right\" isOpen={signatureVisible}\n        >\n          <div className=\"signature\">\n            <Signature\n              ref={$svg}\n            />\n          </div>\n        </SignatureModal>}\n    </>\n  );\n};\nexport default InsureDoc;\n"],"names":["isModal","containerRef","props","useState","showTop","setShowTop","useEffect","handleModalScroll","e","current","scrollTop","scrollHeight","clientHeight","pdfCards","document","getElementsByClassName","index","length","item","currentHeight","getBoundingClientRect","y","currentClientHeight","round","setActivePage","ele","getElementById","classList","contains","add","addEventListener","removeEventListener","handleScroll","documentElement","window","innerHeight","scrollY","className","onClick","scrollTo","top","behavior","bodyClassName","isOpen","headerTitle","headerButton","buttonPosition","children","footerContent","isModalMsg","customHeaderButtonOnclick","divRefs","useRef","activePage","id","style","zIndex","elements","getElementsByTagName","maxZ","i","getComputedStyle","zIndexNumber","parseInt","isNaN","Math","max","getMaxZIndex","pageNum","edit","map","p","element","scrollIntoView","ref","TopButton","Point","x","this","pdf","setPdf","initSignList","name","backRect","signImg","clickRect","signList","setSignList","currentSign","setCurrentSign","Set","bindRelationSet","setBindRelationSet","url","require","pdfjsLib","promise","then","getPage","page","canvas","ctx","getContext","viewport","getViewport","scale","width","height","setTransform","renderContext","canvasContext","render","draw","numPages","fillStyle","forEach","sign","fillRect","signatureVisible","setSignatureVisible","$svg","img","Image","src","onload","drawImage","clientWidth","filter","s","remove","checkEditSuccess","relation","clearRect","fillText","drawRelation","values","next","value","visible","type","setVisible","Array","_","clientX","clientY","rect","currentTarget","left","point","A","B","C","D","a","b","c","d","isPointInRect","trimedCanvas","getTrimmedCanvas","resizedCanvas","myResizedData","toDataURL","clone","m","delete","clear"],"sourceRoot":""}