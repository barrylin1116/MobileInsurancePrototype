{"version":3,"file":"static/js/483.cb37d7fa.chunk.js","mappings":"4NACA,ECEoC,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,UAAcC,GAAY,YAC7DC,GAAiBC,EAAAA,EAAAA,QAA2BJ,EAAKA,EAAGK,MAAM,KAAKC,KAAK,UAAOC,GAEjF,OACE,+BACE,oCAAWL,GAAX,IAAkBF,GAAIG,EAAeK,QAASP,UAAW,gBAAkBA,EAAS,WAAOA,GAAc,IAAK,aAAYC,EAAMO,a,gJCPtI,ECKwB,WACtB,OACE,kBAAMR,UAAU,mBAAhB,WACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,oBAAf,6FAGA,gBAAKA,UAAU,qBAAf,UACE,iBAAKA,UAAU,eAAf,WACE,iBAAKA,UAAU,mCAAf,WAEE,gBAAKA,UAAU,OAAf,iCACA,iBAAKA,UAAU,8BAAf,WACE,SAACS,EAAA,EAAD,CAAOC,KAAK,cACZ,gBAAKV,UAAU,iBAEjB,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,UACf,0EAEF,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,UACf,mLAEF,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,UACf,uKAEF,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,UACf,+FAEF,iBAAKA,UAAU,wBAAf,WACE,gBAAKA,UAAU,UACf,0HAIJ,iBAAKA,UAAU,mCAAf,WAEE,gBAAKA,UAAU,OAAf,6CACA,iBAAKA,UAAU,8BAAf,WACE,SAACS,EAAA,EAAD,CAAOC,KAAK,cACZ,gBAAKV,UAAU,4BAMzB,mBACEU,KAAK,SAASV,UAAU,4BAA4BW,QAAS,kBAC3DC,IAAAA,KAAU,CACRJ,MAAO,eACPK,KAAM,6CACNC,kBAAmB,eACnBC,kBAAkB,IACjBC,MAAK,SAACC,GACHA,GACFC,EAAAA,EAAAA,KAAmBC,EAAAA,EAAAA,YAT3B","sources":["app/common/components/Elements/Input/index.ts","app/common/components/Elements/Input/Input.tsx","app/features/Other/pages/PassPhrase/Setup/index.ts","app/features/Other/pages/PassPhrase/Setup/Setup.tsx"],"sourcesContent":["import Input from './Input';\nexport default Input;\n","import React, { useRef } from 'react';\nimport { InputProps } from './types';\n\nconst Input: React.FC<InputProps> = ({ id, className, ...props }) => {\n  const inputElemIdRef = useRef<string | undefined>(id ? id.split('.').join('-') : undefined);\n\n  return (\n    <>\n      <input {...props} id={inputElemIdRef.current} className={'form-control' + (className ? ` ${className}` : '')} aria-label={props.title} />\n    </>\n\n  );\n};\n\nexport default Input;\n","import Setup from './Setup';\nexport default Setup;\n","import React from 'react';\nimport Input from 'app/common/components/Elements/Input';\nimport { routerHistory } from 'app/core/router/service';\nimport { ROUTES } from 'app/core/router/paths';\nimport Swal from 'sweetalert2';\n\nconst Setup: React.FC = () => {\n  return (\n    <form className=\"needs-validation\">\n      <div className=\"form\">\n        <div className=\"title-explanation\">\n          驗證成功，請重新設定密碼。\n        </div>\n        <div className=\"form-content w-100\">\n          <div className=\"row form-row\">\n            <div className=\"passphrase-field col-12 col-lg-5\">\n              {/* 新密碼 */}\n              <div className=\"name\">新密碼</div>\n              <div className=\"pwd-input-wrapper eye-close\">\n                <Input type=\"password\" />\n                <div className=\"eye-icon\" />\n              </div>\n              <div className=\"notes mt-2 grey-notes\">\n                <div className=\"icon\" />\n                <span>應至少 8 位數。</span>\n              </div>\n              <div className=\"notes mt-2 grey-notes\">\n                <div className=\"icon\" />\n                <span>採英數字混合使用，且宜包含大小寫英文字母或符號。</span>\n              </div>\n              <div className=\"notes mt-2 grey-notes\">\n                <div className=\"icon\" />\n                <span>不應訂為相同的英數字、連續英文字或連號數字。</span>\n              </div>\n              <div className=\"notes mt-2 grey-notes\">\n                <div className=\"icon\" />\n                <span>密碼與帳號不應相同。</span>\n              </div>\n              <div className=\"notes mt-2 grey-notes\">\n                <div className=\"icon\" />\n                <span>新密碼不可與前一次密碼相同。</span>\n              </div>\n            </div>\n            {/* 確認新密碼 */}\n            <div className=\"passphrase-field col-12 col-lg-5\">\n              {/* 新密碼 */}\n              <div className=\"name\">確認新密碼</div>\n              <div className=\"pwd-input-wrapper eye-close\">\n                <Input type=\"password\" />\n                <div className=\"eye-icon\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button\n        type=\"button\" className=\"btn btn-primary next-step\" onClick={() =>\n          Swal.fire({\n            title: '提示',\n            text: '密碼修改成功！',\n            confirmButtonText: '確認',\n            showCancelButton: false\n          }).then((isConfirm) => {\n            if (isConfirm) {\n              routerHistory.push(ROUTES.PAGE_1);\n            }\n          })}\n      >確認\n      </button>\n    </form>\n  );\n};\n\nexport default Setup;\n"],"names":["id","className","props","inputElemIdRef","useRef","split","join","undefined","current","title","Input","type","onClick","Swal","text","confirmButtonText","showCancelButton","then","isConfirm","routerHistory","ROUTES"],"sourceRoot":""}